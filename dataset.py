import torch
from torch.utils.data import Dataset
import numpy as np

sqrt2 = 2**0.5

class SphereDataset(Dataset):
    def __init__(self):
        self.spheres = np.array([[1, 1, 0, 0, 0], [1, -1, 0, 0, 0], [-1, 1, 0, 0, 0], [-1, -1, 0, 0, 0], [1, 0, 1, 0, 0], [1, 0, -1, 0, 0], [-1, 0, 1, 0, 0], [-1, 0, -1, 0, 0], [1, 0, 0, 1, 0], [1, 0, 0, -1, 0], [-1, 0, 0, 1, 0], [-1, 0, 0, -1, 0], [1, 0, 0, 0, 1], [1, 0, 0, 0, -1], [-1, 0, 0, 0, 1], [-1, 0, 0, 0, -1], [0, 1, 1, 0, 0], [0, 1, -1, 0, 0], [0, -1, 1, 0, 0], [0, -1, -1, 0, 0], [0, 1, 0, 1, 0], [0, 1, 0, -1, 0], [0, -1, 0, 1, 0], [0, -1, 0, -1, 0], [0, 1, 0, 0, 1], [0, 1, 0, 0, -1], [0, -1, 0, 0, 1], [0, -1, 0, 0, -1], [0, 0, 1, 1, 0], [0, 0, 1, -1, 0], [0, 0, -1, 1, 0], [0, 0, -1, -1, 0], [0, 0, 1, 0, 1], [0, 0, 1, 0, -1], [0, 0, -1, 0, 1], [0, 0, -1, 0, -1], [0, 0, 0, 1, 1], [0, 0, 0, 1, -1], [0, 0, 0, -1, 1], [0, 0, 0, -1, -1]]


 )
        # self.spheres = np.array

    def __len__(self):
        return len(self.spheres)

    def __getitem__(self, idx):
        return torch.tensor(self.spheres[idx], dtype=torch.float32)
